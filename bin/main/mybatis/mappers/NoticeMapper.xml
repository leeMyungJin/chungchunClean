<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.limefood.Mappers.NoticeMapper">

<insert id="writeNotice" parameterType = "hashMap">
    INSERT INTO limefood.admin_notice
    (title, from_date, to_date, content, file_size, file_type, file, notice_yn, cret_time, cret_id, width, height)
    VALUES(#{title}, #{startDate}, #{endDate}, #{webEditor}, #{fileSize}, #{fileType}, '', #{noticeYn}, now(), #{userId}, nullif(#{width}, '')::numeric, nullif(#{height},'')::numeric);

</insert>

<select id="searchNotice" parameterType="hashMap" resultType="com.limefood.vo.NoticeInfoVO">
    select index,
        title,
        ( substring(from_date, 0, 5)|| '-' || substring(from_date, 5, 2)|| '-' || substring(from_date, 7, 2) || '~' || substring(to_date, 0, 5)|| '-' || substring(to_date, 5, 2)|| '-' || substring(to_date, 7, 2) ) as period,
        content ,
        usr.name as cret_id,
        substring(from_date, 0, 5)|| '-' || substring(from_date, 5, 2)|| '-' || substring(from_date, 7, 2) from_date,
        substring(to_date, 0, 5)|| '-' || substring(to_date, 5, 2)|| '-' || substring(to_date, 7, 2) to_date,
        to_char(notice.cret_time , 'yyyy-mm-dd hh24:mi:ss') as cret_time,
        case when notice_yn = 'S'  then '저장'
             when notice_yn = 'C' then '공지(완료)' 
             when notice_yn = 'D' then '삭제'
             end as status,
        index,
        width,
        height
    from
        limefood.admin_notice notice
    left outer join limefood.cust_info_bas usr on
        notice.cret_id = usr.id
    where 1=1
     and ( replace(from_date,'-','')::date between #{fromDate}::date and  #{toDate}::date or 
           replace(to_date,'-','')::date between #{fromDate}::date and  #{toDate}::date
         )
    <choose>
        <when test= "search == null">
            <if test="searchText != null">
                AND (	
                            title LIKE '%' || #{searchText} || '%'
                        OR
                            content LIKE '%' || #{searchText} || '%'
                    )
            </if>	   
        </when>
        <when test="search == 'title' ">
            <if test="searchText != null">
                AND (	
                            title LIKE '%' || #{searchText} || '%'
                )
            </if>
        </when>
        <when test="search == 'content'">
            <if test="searchText != null">
                AND (	
                            content LIKE '%' || #{content} || '%'
                )
            </if>        
        </when>
    </choose>
    order by index
</select>

<update id="updateNotice" parameterType="hashMap">
    update  limefood.admin_notice notice
      set title =#{title}
         , content = #{webEditor}
         , from_date = #{startDate}
         , to_date = #{endDate}
         , chg_time = now()
         , chg_id = #{userId}
         , notice_yn = #{noticeYn}
         , width = #{width}::numeric
         , height = #{height}::numeric
    where index = #{index}::integer
</update>

<select id="getNotice" parameterType="hashMap" resultType ="Integer">
    select count(*)
    from limefood.admin_notice
    where index = #{index}::integer
</select>

<select id="deleteNotice" parameterType="hashMap"  >
    delete  from limefood.admin_notice
    where index = #{index}::integer
</select>

<select id="getNoticeList" resultType="com.limefood.vo.NoticeInfoVO">
select index, width, height
from limefood.admin_notice
where notice_yn = 'C'
and to_char(now()::date,'yyyymmdd') between from_date  and to_date
</select>

</mapper>